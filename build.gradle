plugins {
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
}

group = 'com.quantori'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation "com.typesafe.akka:akka-actor-typed_2.13:${akkaVersion}"
	implementation "com.typesafe.akka:akka-cluster-typed_2.13:${akkaVersion}"
	implementation "com.typesafe.akka:akka-serialization-jackson_2.13:${akkaVersion}"
	implementation "com.typesafe.akka:akka-bom_2.13:${akkaVersion}"
	implementation "com.typesafe.akka:akka-stream-typed_2.13:${akkaVersion}"
	implementation "com.typesafe.akka:akka-stream_2.13:${akkaVersion}"
	implementation "io.projectreactor:reactor-core:${reactorVersion}"
	implementation "com.quantori:cqp-core:${cqpVersion}"
	implementation "com.quantori:cqp-api:${cqpApiVersion}"
	implementation "com.quantori:cqp-storage-elasticsearch:${cqpElasticVersion}"
	implementation "com.lightbend.akka:akka-stream-alpakka-slick_2.13:${akkaAlpakkaSlick}"
	implementation "org.postgresql:postgresql:${postgresqlVersion}"
	implementation "com.zaxxer:HikariCP:${hikariVersion}"
	implementation "com.epam.indigo:indigo:${indigoVersion}"
	implementation "com.epam.indigo:indigo-inchi:${indigoVersion}"
	implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
	implementation "co.elastic.clients:elasticsearch-java:${elasticSearchVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerVersion}"
	implementation "jakarta.annotation:jakarta.annotation-api:${jakartaVersion}"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation "org.mockito:mockito-core:${mockitoVersion}"
	testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
	testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
	testImplementation "org.junit.jupiter:junit-jupiter-api"
	testImplementation "org.junit.jupiter:junit-jupiter-params"
	testImplementation "org.junit.jupiter:junit-jupiter-engine"
	testImplementation "org.assertj:assertj-core:${assertjVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = 'chem-query-platform-demo.jar'
}
